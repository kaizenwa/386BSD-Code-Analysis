.\" Copyright (c) 1980, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     From: @(#)setreuid.2	6.4 (Berkeley) 3/10/91
.\"	$Id: setreuid.2,v 1.2 1994/03/16 19:01:09 wollman Exp $
.\"
.Dd March 16, 1994
.Dt SETREUID 2
.Os
.Sh NAME
.Nm setreuid
.Nd set real and effective user ID's
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fn setreuid "int ruid" "int euid"
.Sh DESCRIPTION
Note: In
.Fx 1.0.2
and earlier versions, this function would set the real and effective
user ID's of the current process according to the arguments.  In
.Fx 1.1
we have adopted the behavior of
.Bx 4.4 .
.Pp
The
.Nm
function is normally used by programs which wish to temporarily
renounce special privileges they have gained (usually as a result of
being set-uid executables), by swapping real and effective
user ID's, so that the renunciation is reversible.
This can result in a security hole, and does not integrate well with
the
.Tn POSIX
saved user ID.  In
.Fx 1.1 ,
the
.Nm
function will never actually set the real user ID; however, it will
check its value to ensure that a future
.Xr seteuid 2
call with the
.Fa ruid
argument will succeed.
.Pp
If
.Fa ruid
or 
.Fa euid
is -1, the current ID is filled in by the system.
The effective user ID is set, if requested, as if
.Xr seteuid 2
had been called.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.  Otherwise,
a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Bl -tag -width [EPERM]
.It Bq Er EPERM
The current process is not the super-user and a change
other than changing the effective user-id to the real user-id
was specified.
.El
.Sh SEE ALSO
.Xr getuid 2 ,
.Xr setregid 2 ,
.Xr setuid 3
.Sh HISTORY
The
.Nm
function call appeared in
.Bx 4.2 .
